using  System;
using  System.Collections.Generic;
using  System.Linq.Expressions;
using  System.Web;
using  Umbraco.Core.Models;
using  Umbraco.Core.Models.PublishedContent;
using  Umbraco.Web;
using  Umbraco.ModelsBuilder;
using  Umbraco.ModelsBuilder.Umbraco;
[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "f9bcb43c4f346879")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.1")]


// FILE: models.generated.cs

//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.5.96
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------















namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Advanced Component Master</summary>
	[PublishedContentModel("USNAdvancedComponentMaster")]
	public partial class UsnadvancedComponentMaster : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNAdvancedComponentMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnadvancedComponentMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnadvancedComponentMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Advanced Component Banner</summary>
	[PublishedContentModel("USN_AC_Banner")]
	public partial class Usn_Ac_Banner : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_Banner";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_Banner(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_Banner, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("bannerHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading BannerHeading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("bannerHeading"); }
		}

		///<summary>
		/// Image: Image will be cropped to 1400px x 550px.  {br}{br}  Focal point of the image is defined within your "Media" section. 
		///</summary>
		[ImplementPropertyType("bannerImage")]
		public string BannerImage
		{
			get { return this.GetPropertyValue<string>("bannerImage"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("bannerImageAltText")]
		public string BannerImageAltText
		{
			get { return this.GetPropertyValue<string>("bannerImageAltText"); }
		}

		///<summary>
		/// Link: Use the 'Caption' field to override the default link text.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("bannerLink")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker BannerLink
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("bannerLink"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("bannerText")]
		public IHtmlString BannerText
		{
			get { return this.GetPropertyValue<IHtmlString>("bannerText"); }
		}

		///<summary>
		/// Text alignment
		///</summary>
		[ImplementPropertyType("bannerTextAlignment")]
		public object BannerTextAlignment
		{
			get { return this.GetPropertyValue("bannerTextAlignment"); }
		}

		///<summary>
		/// Text colour scheme: Select the colour scheme of any text that appears over the image.     A dark colour scheme will be used by default.
		///</summary>
		[ImplementPropertyType("textColourScheme")]
		public object TextColourScheme
		{
			get { return this.GetPropertyValue("textColourScheme"); }
		}
	}

	/// <summary>Advanced Component Banner Slider</summary>
	[PublishedContentModel("USN_AC_BannerSlider_AN")]
	public partial class Usn_Ac_BannerSlider_AN : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_BannerSlider_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_BannerSlider_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_BannerSlider_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: "Banners" must be added below this item for it to function correctly.
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Advanced Component Grid Layout Section</summary>
	[PublishedContentModel("USN_AC_GridLayoutSection_AN")]
	public partial class Usn_Ac_GridLayoutSection_AN : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_GridLayoutSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_GridLayoutSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_GridLayoutSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Background color
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public object BackgroundColor
		{
			get { return this.GetPropertyValue("backgroundColor"); }
		}

		///<summary>
		/// Grid
		///</summary>
		[ImplementPropertyType("grid")]
		public Newtonsoft.Json.Linq.JToken Grid
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("grid"); }
		}
	}

	/// <summary>Advanced Component Pod</summary>
	[PublishedContentModel("USN_AC_Pod")]
	public partial class Usn_Ac_Pod : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_Pod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_Pod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_Pod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image: Image will be cropped to 345px x 260px.  {br}{br}  Focal point of the image is defined within your "Media" section. 
		///</summary>
		[ImplementPropertyType("podImage")]
		public string PodImage
		{
			get { return this.GetPropertyValue<string>("podImage"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("podImageAltText")]
		public string PodImageAltText
		{
			get { return this.GetPropertyValue<string>("podImageAltText"); }
		}

		///<summary>
		/// Link: Use the 'Caption' field to override the default link text.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("podLink")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker PodLink
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("podLink"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("podText")]
		public IHtmlString PodText
		{
			get { return this.GetPropertyValue<IHtmlString>("podText"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("podTitle")]
		public string PodTitle
		{
			get { return this.GetPropertyValue<string>("podTitle"); }
		}
	}

	/// <summary>Advanced Component Pods Section</summary>
	[PublishedContentModel("USN_AC_PodsSection_AN")]
	public partial class Usn_Ac_PodsSection_AN : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_PodsSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_PodsSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_PodsSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Background color
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public object BackgroundColor
		{
			get { return this.GetPropertyValue("backgroundColor"); }
		}

		///<summary>
		/// Instructions: "Pods" must be added below this item for it to function correctly.
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Advanced Component Signup/Subpage Listing Section</summary>
	[PublishedContentModel("USN_AC_SignupSubpageListingSection_AN")]
	public partial class Usn_Ac_SignupSubpageListingSection_AN : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_SignupSubpageListingSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_SignupSubpageListingSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_SignupSubpageListingSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Background color
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public object BackgroundColor
		{
			get { return this.GetPropertyValue("backgroundColor"); }
		}

		///<summary>
		/// Campaign Monitor Subscriber List ID: Newsletter Signup will only be available if a Subscriber List ID is available.  {br}{br}  Use this field to override the default Subscriber List ID in "Global Settings" if present.
		///</summary>
		[ImplementPropertyType("campaignMonitorSubscriberListID")]
		public string CampaignMonitorSubscriberListID
		{
			get { return this.GetPropertyValue<string>("campaignMonitorSubscriberListID"); }
		}

		///<summary>
		/// Link to listing: Link this to a page that contains sub pages. Sub pages will be listed.    Use the 'Caption' field to override the default link text.
		///</summary>
		[ImplementPropertyType("linkToListing")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker LinkToListing
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("linkToListing"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("listingSectionHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading ListingSectionHeading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("listingSectionHeading"); }
		}

		///<summary>
		/// Button text
		///</summary>
		[ImplementPropertyType("newsletterButtonText")]
		public string NewsletterButtonText
		{
			get { return this.GetPropertyValue<string>("newsletterButtonText"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("newsletterHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading NewsletterHeading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("newsletterHeading"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("newsletterIntroduction")]
		public IHtmlString NewsletterIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("newsletterIntroduction"); }
		}

		///<summary>
		/// Newsletter section position
		///</summary>
		[ImplementPropertyType("newsletterSectionPosition")]
		public object NewsletterSectionPosition
		{
			get { return this.GetPropertyValue("newsletterSectionPosition"); }
		}

		///<summary>
		/// Pages to display: If nothing is entered, this section will be hidden.
		///</summary>
		[ImplementPropertyType("pagesToDisplay")]
		public string PagesToDisplay
		{
			get { return this.GetPropertyValue<string>("pagesToDisplay"); }
		}

		///<summary>
		/// Submission message
		///</summary>
		[ImplementPropertyType("submissionMessage")]
		public IHtmlString SubmissionMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("submissionMessage"); }
		}

		///<summary>
		/// Summary text character count: Enter the number of characters you would like displayed from the beginning of each page (General pages and Blog posts).   {br}{br}  If summary text has been entered this will be used instead. Summary text must be entered on Advanced pages for this to be displayed. If nothing is entered, no summary text will be displayed.
		///</summary>
		[ImplementPropertyType("summaryTextCharacterCount")]
		public string SummaryTextCharacterCount
		{
			get { return this.GetPropertyValue<string>("summaryTextCharacterCount"); }
		}
	}

	/// <summary>Advanced Component Subpage Listing/Blog/Signup Section</summary>
	[PublishedContentModel("USN_AC_SubpageListingBlogSignupSection_AN")]
	public partial class Usn_Ac_SubpageListingBlogSignupSection_AN : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_SubpageListingBlogSignupSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_SubpageListingBlogSignupSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_SubpageListingBlogSignupSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Background color
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public object BackgroundColor
		{
			get { return this.GetPropertyValue("backgroundColor"); }
		}

		///<summary>
		/// Blog listing heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("blogListingHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading BlogListingHeading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("blogListingHeading"); }
		}

		///<summary>
		/// Blog posts to display: If nothing is entered, this section will be hidden.
		///</summary>
		[ImplementPropertyType("blogPostsToDisplay")]
		public string BlogPostsToDisplay
		{
			get { return this.GetPropertyValue<string>("blogPostsToDisplay"); }
		}

		///<summary>
		/// Campaign Monitor Subscriber List ID: Newsletter Signup will only be available if a Subscriber List ID is available. Use this field to override the default Subscriber List ID in "Global Settings" if present.
		///</summary>
		[ImplementPropertyType("campaignMonitorSubscriberListID")]
		public string CampaignMonitorSubscriberListID
		{
			get { return this.GetPropertyValue<string>("campaignMonitorSubscriberListID"); }
		}

		///<summary>
		/// Link to blog landing: Link this to a Blog Landing page. Latest blog posts will be listed.  {br}{br}  If no 'Blog landing page' is selected, this section will be hidden.
		///</summary>
		[ImplementPropertyType("linkToBlogLanding")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker LinkToBlogLanding
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("linkToBlogLanding"); }
		}

		///<summary>
		/// Link to listing: Link this to a page that contains sub pages. Sub pages will be listed. If no 'Page' is selected, this section will be hidden.  {br}{br}  Use the 'Caption' field to override the default link text.
		///</summary>
		[ImplementPropertyType("linkToListing")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker LinkToListing
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("linkToListing"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("listingSectionHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading ListingSectionHeading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("listingSectionHeading"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("listingSectionIntroduction")]
		public IHtmlString ListingSectionIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("listingSectionIntroduction"); }
		}

		///<summary>
		/// Button text
		///</summary>
		[ImplementPropertyType("newsletterButtonText")]
		public string NewsletterButtonText
		{
			get { return this.GetPropertyValue<string>("newsletterButtonText"); }
		}

		///<summary>
		/// Newsletter heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("newsletterHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading NewsletterHeading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("newsletterHeading"); }
		}

		///<summary>
		/// Newsletter introduction
		///</summary>
		[ImplementPropertyType("newsletterIntroduction")]
		public IHtmlString NewsletterIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("newsletterIntroduction"); }
		}

		///<summary>
		/// Pages to display: If nothing is entered, this section will be hidden.
		///</summary>
		[ImplementPropertyType("pagesToDisplay")]
		public string PagesToDisplay
		{
			get { return this.GetPropertyValue<string>("pagesToDisplay"); }
		}

		///<summary>
		/// Submission message
		///</summary>
		[ImplementPropertyType("submissionMessage")]
		public IHtmlString SubmissionMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("submissionMessage"); }
		}

		///<summary>
		/// Subpage Listing Section position
		///</summary>
		[ImplementPropertyType("subpageListingSectionPosition")]
		public object SubpageListingSectionPosition
		{
			get { return this.GetPropertyValue("subpageListingSectionPosition"); }
		}

		///<summary>
		/// Summary text character count: Enter the number of characters you would like displayed from the beginning of each page (General pages and Blog posts).   {br}{br}  If summary text has been entered this will be used instead. Summary text must be entered on Advanced pages for this to be displayed. If nothing is entered, no summary text will be displayed.
		///</summary>
		[ImplementPropertyType("summaryTextCharacterCount")]
		public string SummaryTextCharacterCount
		{
			get { return this.GetPropertyValue<string>("summaryTextCharacterCount"); }
		}
	}

	/// <summary>Advanced Component Tabbed Listing Section</summary>
	[PublishedContentModel("USN_AC_TabbedListingSection_AN")]
	public partial class Usn_Ac_TabbedListingSection_AN : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_TabbedListingSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_TabbedListingSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_TabbedListingSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Background color
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public object BackgroundColor
		{
			get { return this.GetPropertyValue("backgroundColor"); }
		}

		///<summary>
		/// Link to listings: Add pages that contains sub pages. Each page you select containing sub pages will be displayed along with a menu to switch between them.  {br}{br}  If no 'Pages' are selected, this section will be hidden.  {br}{br}  Links to external pages will be ignored.  {br}{br}  The "Caption" field is used for tab heading and link to each listing.
		///</summary>
		[ImplementPropertyType("linkToListings")]
		public Newtonsoft.Json.Linq.JArray LinkToListings
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JArray>("linkToListings"); }
		}

		///<summary>
		/// Pages to display: If nothing is entered, this section will be hidden.
		///</summary>
		[ImplementPropertyType("pagesToDisplay")]
		public string PagesToDisplay
		{
			get { return this.GetPropertyValue<string>("pagesToDisplay"); }
		}

		///<summary>
		/// Summary text character count: Enter the number of characters you would like displayed from the beginning of each page (Standard pages and Blog posts).   {br}{br}  If summary text has been entered this will be used instead. Summary text must be entered on Advanced pages for this to be displayed. If nothing is entered, no summary text will be displayed.
		///</summary>
		[ImplementPropertyType("summaryTextCharacterCount")]
		public string SummaryTextCharacterCount
		{
			get { return this.GetPropertyValue<string>("summaryTextCharacterCount"); }
		}
	}

	/// <summary>Advanced Component Text/Signup Section</summary>
	[PublishedContentModel("USN_AC_TextSignupSection_AN")]
	public partial class Usn_Ac_TextSignupSection_AN : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_TextSignupSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_TextSignupSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_TextSignupSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Background color
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public object BackgroundColor
		{
			get { return this.GetPropertyValue("backgroundColor"); }
		}

		///<summary>
		/// Campaign Monitor Subscriber List ID: Newsletter Signup will only be available if a Subscriber List ID is available.  {br}{br}  Use this field to override the default Subscriber List ID in "Global Settings" if present.
		///</summary>
		[ImplementPropertyType("campaignMonitorSubscriberListID")]
		public string CampaignMonitorSubscriberListID
		{
			get { return this.GetPropertyValue<string>("campaignMonitorSubscriberListID"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("heading")]
		public USNStarterKit.USNHeading.Models.USNHeading Heading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("heading"); }
		}

		///<summary>
		/// Button text
		///</summary>
		[ImplementPropertyType("NewsletterbuttonText")]
		public string NewsletterbuttonText
		{
			get { return this.GetPropertyValue<string>("NewsletterbuttonText"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("newsletterHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading NewsletterHeading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("newsletterHeading"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("newsletterIntroduction")]
		public IHtmlString NewsletterIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("newsletterIntroduction"); }
		}

		///<summary>
		/// Submission message
		///</summary>
		[ImplementPropertyType("submissionMessage")]
		public IHtmlString SubmissionMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("submissionMessage"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return this.GetPropertyValue<IHtmlString>("text"); }
		}

		///<summary>
		/// Text section position: Display text area to the left or right of the newsletter signup form.
		///</summary>
		[ImplementPropertyType("textSectionPosition")]
		public object TextSectionPosition
		{
			get { return this.GetPropertyValue("textSectionPosition"); }
		}
	}

	/// <summary>Advanced Component Text/Video or Image Section</summary>
	[PublishedContentModel("USN_AC_TextVideoOrImageSection_AN")]
	public partial class Usn_Ac_TextVideoOrImageSection_AN : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_TextVideoOrImageSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_TextVideoOrImageSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_TextVideoOrImageSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Background color
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public object BackgroundColor
		{
			get { return this.GetPropertyValue("backgroundColor"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("heading")]
		public USNStarterKit.USNHeading.Models.USNHeading Heading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("heading"); }
		}

		///<summary>
		/// Image: This image is optional. If you do not upload an image and a video URL has been added, a thumbnail image will be automatically generated for you from the associated video.  {br}{br}  Image will be cropped to 720px x 495px.  {br}{br}  Focal point of the image is defined within your "Media" section. 
		///</summary>
		[ImplementPropertyType("image")]
		public string Image
		{
			get { return this.GetPropertyValue<string>("image"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("imageAltText")]
		public string ImageAltText
		{
			get { return this.GetPropertyValue<string>("imageAltText"); }
		}

		///<summary>
		/// Light window text: This text will be displayed along with your video within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowText")]
		public string LightWindowText
		{
			get { return this.GetPropertyValue<string>("lightWindowText"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return this.GetPropertyValue<IHtmlString>("text"); }
		}

		///<summary>
		/// Text section position: Display text area to the left or right of the video or image.
		///</summary>
		[ImplementPropertyType("textSectionPosition")]
		public object TextSectionPosition
		{
			get { return this.GetPropertyValue("textSectionPosition"); }
		}

		///<summary>
		/// Video: Copy the full URL for your video from the address bar or share link provided. (YouTube or Vimeo only)
		///</summary>
		[ImplementPropertyType("video")]
		public string Video
		{
			get { return this.GetPropertyValue<string>("video"); }
		}
	}

	/// <summary>Advanced Component Thumbnail</summary>
	[PublishedContentModel("USN_AC_Thumbnail")]
	public partial class Usn_Ac_Thumbnail : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_Thumbnail";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_Thumbnail(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_Thumbnail, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image: Image will be cropped to 300px x 160px.  {br}{br}  Focal point of the image is defined within your "Media" section. 
		///</summary>
		[ImplementPropertyType("thumbnailImage")]
		public string ThumbnailImage
		{
			get { return this.GetPropertyValue<string>("thumbnailImage"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("thumbnailImageAltText")]
		public string ThumbnailImageAltText
		{
			get { return this.GetPropertyValue<string>("thumbnailImageAltText"); }
		}

		///<summary>
		/// Link
		///</summary>
		[ImplementPropertyType("thumbnailLink")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker ThumbnailLink
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("thumbnailLink"); }
		}
	}

	/// <summary>Advanced Component Thumbnail Slider</summary>
	[PublishedContentModel("USN_AC_ThumbnailSlider_AN")]
	public partial class Usn_Ac_ThumbnailSlider_AN : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_ThumbnailSlider_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_ThumbnailSlider_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_ThumbnailSlider_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Background color
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public object BackgroundColor
		{
			get { return this.GetPropertyValue("backgroundColor"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("heading")]
		public USNStarterKit.USNHeading.Models.USNHeading Heading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("heading"); }
		}

		///<summary>
		/// Instructions: "Thumbnails" must be added below this item for it to function correctly.
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("introduction")]
		public IHtmlString Introduction
		{
			get { return this.GetPropertyValue<IHtmlString>("introduction"); }
		}
	}

	/// <summary>Advanced Page Components Folder</summary>
	[PublishedContentModel("USNAdvancedPageComponents")]
	public partial class UsnadvancedPageComponents : UsnadvancedComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNAdvancedPageComponents";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnadvancedPageComponents(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnadvancedPageComponents, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: Create items below this folder to add more advanced features to your page.  {br}{br}  DO NOT delete or rename this folder.
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Blog Master</summary>
	[PublishedContentModel("USNBlogMaster")]
	public partial class UsnblogMaster : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Blog Author</summary>
	[PublishedContentModel("USNBlogAuthor")]
	public partial class UsnblogAuthor : UsnblogMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogAuthor";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogAuthor(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogAuthor, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Author bio: The author bio will appear below every blog post associated with this author and should contain a short snippet about the author.
		///</summary>
		[ImplementPropertyType("authorBio")]
		public IHtmlString AuthorBio
		{
			get { return this.GetPropertyValue<IHtmlString>("authorBio"); }
		}

		///<summary>
		/// Author page: Use this to link to the authors page which could be an external blog or a page on this website. If something is entered here the authors name on blog listings and blog post pages will link to this page.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("authorPage")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker AuthorPage
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("authorPage"); }
		}
	}

	/// <summary>Blog Authors Folder</summary>
	[PublishedContentModel("USNBlogAuthors")]
	public partial class UsnblogAuthors : UsnblogMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogAuthors";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogAuthors(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogAuthors, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: Create items below this folder to add new "Blog Authors".  {br}{br}  DO NOT delete or rename this folder.
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Blog Categories Folder</summary>
	[PublishedContentModel("USNBlogCategories")]
	public partial class UsnblogCategories : UsnblogMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogCategories";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogCategories(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogCategories, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: Create items below this folder to add new "Blog Categories".  {br}{br}  DO NOT delete or rename this folder.
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Blog Category</summary>
	[PublishedContentModel("USNBlogCategory")]
	public partial class UsnblogCategory : UsnblogMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogCategory";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogCategory(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogCategory, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Introduction: Displayed only on page one of the "Blog Landing Page" when this category is selected.
		///</summary>
		[ImplementPropertyType("categoryIntroduction")]
		public IHtmlString CategoryIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("categoryIntroduction"); }
		}

		///<summary>
		/// Category page title: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("categoryPageTitle")]
		public string CategoryPageTitle
		{
			get { return this.GetPropertyValue<string>("categoryPageTitle"); }
		}
	}

	/// <summary>Blog Month Folder</summary>
	[PublishedContentModel("USNBlogMonthFolder")]
	public partial class UsnblogMonthFolder : UsnblogMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogMonthFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogMonthFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogMonthFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: Use this folder as a container to organise your blog posts into a month.  {br}{br}  It is recommended to name these January, February etc
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Blog Posts Folder</summary>
	[PublishedContentModel("USNBlogPostsFolder")]
	public partial class UsnblogPostsFolder : UsnblogMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogPostsFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogPostsFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogPostsFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: Use this folder to organise your blog posts.
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Blog RSS</summary>
	[PublishedContentModel("USNBlogRSS")]
	public partial class UsnblogRss : UsnblogMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogRSS";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogRss(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogRss, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Copyright
		///</summary>
		[ImplementPropertyType("rssCopyright")]
		public string RssCopyright
		{
			get { return this.GetPropertyValue<string>("rssCopyright"); }
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("rssDescription")]
		public string RssDescription
		{
			get { return this.GetPropertyValue<string>("rssDescription"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("rssTitle")]
		public string RssTitle
		{
			get { return this.GetPropertyValue<string>("rssTitle"); }
		}
	}

	/// <summary>Blog Year Folder</summary>
	[PublishedContentModel("USNBlogYearFolder")]
	public partial class UsnblogYearFolder : UsnblogMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogYearFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogYearFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogYearFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: Use this folder as a container to organise your blog posts into a year.   {br}{br}  You must name these 2013, 2014 etc.   {br}{br}  Below this folder you should add month folders.
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Content Master</summary>
	[PublishedContentModel("USNContentMaster")]
	public partial class UsncontentMaster : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNContentMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsncontentMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsncontentMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Hide outro strip section: Tick this box to hide the outro strip section if content has been added to "Global Settings" or above.
		///</summary>
		[ImplementPropertyType("hideOutroStripSection")]
		public bool HideOutroStripSection
		{
			get { return this.GetPropertyValue<bool>("hideOutroStripSection"); }
		}

		///<summary>
		/// Meta description: Use this field to enter a description for your webpage. This is the information that is displayed by search engines when your website appears in a search listing. Try and keep this below 155 characters.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return this.GetPropertyValue<string>("metaDescription"); }
		}

		///<summary>
		/// Open Graph description: A detailed description of the piece of content, usually between 2 and 4 sentences. This tag is technically optional, but can improve the rate at which links are read and shared.
		///</summary>
		[ImplementPropertyType("openGraphDescription")]
		public string OpenGraphDescription
		{
			get { return this.GetPropertyValue<string>("openGraphDescription"); }
		}

		///<summary>
		/// Open Graph image: This is an image associated with your media. We suggest that you use an image of at least 1200x630 pixels. If nothing is uploaded here the "Default Open Graph image" from your "Global Settings" will be used.
		///</summary>
		[ImplementPropertyType("openGraphImage")]
		public string OpenGraphImage
		{
			get { return this.GetPropertyValue<string>("openGraphImage"); }
		}

		///<summary>
		/// Open Graph title: Use this field to override the default Open Graph title of your webpage. The default Open Graph title will be a combination of the current page node name and the website name.
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return this.GetPropertyValue<string>("openGraphTitle"); }
		}

		///<summary>
		/// Link: If a link is added here it will override the default link added in "Global Settings".  {br}{br}  Use the 'Caption' field to override the default link text.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("outroLink")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker OutroLink
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("outroLink"); }
		}

		///<summary>
		/// Text: If text is added here it will override the default text added in "Global Settings"
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return this.GetPropertyValue<IHtmlString>("outroText"); }
		}

		///<summary>
		/// Override default outro strip section: Tick this box to override the default outro stip section if content has been added to "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultOutroStripSection")]
		public bool OverrideDefaultOutroStripSection
		{
			get { return this.GetPropertyValue<bool>("overrideDefaultOutroStripSection"); }
		}

		///<summary>
		/// Override default pods: Tick this box to override the default pods selected within the "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultPods")]
		public bool OverrideDefaultPods
		{
			get { return this.GetPropertyValue<bool>("overrideDefaultPods"); }
		}

		///<summary>
		/// Pods: Select the pods you would like to appear on this page. The pods selected will only be displayed if the above checkbox is ticked.
		///</summary>
		[ImplementPropertyType("pagePods")]
		public string PagePods
		{
			get { return this.GetPropertyValue<string>("pagePods"); }
		}

		///<summary>
		/// Web page header title: Use this field to override the default page title of your webpage. The default page title will be a combination of the current page node name and the website name.
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Hide from all navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return this.GetPropertyValue<bool>("umbracoNaviHide"); }
		}

		///<summary>
		/// Alternative URL: Use this field to provide multiple URLs for a content node.  {br}{br}  For example if you were to enter "examplepage1,examplepage2/this-is-a-test", this would resolve the following URLs to the same page.  {br}{br}  /examplepage1/  /examplepage2/this-is-a-test/  {br}{br}  Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx".
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return this.GetPropertyValue<string>("umbracoUrlAlias"); }
		}
	}

	/// <summary>Advanced Page Master</summary>
	[PublishedContentModel("USNAdvancedPageMaster")]
	public partial class UsnadvancedPageMaster : UsncontentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNAdvancedPageMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnadvancedPageMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnadvancedPageMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Background image: Image will be cropped to 1900px x 405px.  {br}{br}  Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("headerBackgroundImage")]
		public string HeaderBackgroundImage
		{
			get { return this.GetPropertyValue<string>("headerBackgroundImage"); }
		}

		///<summary>
		/// Background image alt text
		///</summary>
		[ImplementPropertyType("headerBackgroundImageAltText")]
		public string HeaderBackgroundImageAltText
		{
			get { return this.GetPropertyValue<string>("headerBackgroundImageAltText"); }
		}

		///<summary>
		/// Hide header image section: Tick this box to hide the header image section if one has been added to "Global Settings" or above.
		///</summary>
		[ImplementPropertyType("hideHeaderImageSection")]
		public bool HideHeaderImageSection
		{
			get { return this.GetPropertyValue<bool>("hideHeaderImageSection"); }
		}

		///<summary>
		/// Page title: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("onPageTitle")]
		public string OnPageTitle
		{
			get { return this.GetPropertyValue<string>("onPageTitle"); }
		}

		///<summary>
		/// Override default header image section: Tick this box to override the default header image section if content has been added to "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultHeaderImageSection")]
		public bool OverrideDefaultHeaderImageSection
		{
			get { return this.GetPropertyValue<bool>("overrideDefaultHeaderImageSection"); }
		}

		///<summary>
		/// Text alignment
		///</summary>
		[ImplementPropertyType("textAlignmentheaderTextAlignment")]
		public object TextAlignmentheaderTextAlignment
		{
			get { return this.GetPropertyValue("textAlignmentheaderTextAlignment"); }
		}

		///<summary>
		/// Text colour scheme: Select the colour scheme of any text that appears over the image. A dark colour scheme will be used by default.
		///</summary>
		[ImplementPropertyType("textColourScheme")]
		public object TextColourScheme
		{
			get { return this.GetPropertyValue("textColourScheme"); }
		}
	}

	/// <summary>Advanced Page (level 1)</summary>
	[PublishedContentModel("USNAdvancedPageLevel1")]
	public partial class UsnadvancedPageLevel1 : UsnadvancedPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNAdvancedPageLevel1";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnadvancedPageLevel1(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnadvancedPageLevel1, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return this.GetPropertyValue<bool>("hideBreadcrumb"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Sub navigation link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subNavigationLinkText")]
		public string SubNavigationLinkText
		{
			get { return this.GetPropertyValue<string>("subNavigationLinkText"); }
		}
	}

	/// <summary>Advanced Page (level 2)</summary>
	[PublishedContentModel("USNAdvancedPageLevel2")]
	public partial class UsnadvancedPageLevel2 : UsnadvancedPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNAdvancedPageLevel2";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnadvancedPageLevel2(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnadvancedPageLevel2, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return this.GetPropertyValue<bool>("hideBreadcrumb"); }
		}

		///<summary>
		/// Listing image: Listing image is only displayed if this page appears on a "Sub Page Listing".  {br}{br}  Image will be cropped to 380px x 285px.  {br}{br}  Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("pageListingImage")]
		public string PageListingImage
		{
			get { return this.GetPropertyValue<string>("pageListingImage"); }
		}

		///<summary>
		/// Listing image alt text
		///</summary>
		[ImplementPropertyType("pageListingImageAltText")]
		public string PageListingImageAltText
		{
			get { return this.GetPropertyValue<string>("pageListingImageAltText"); }
		}

		///<summary>
		/// Page summary: Summary text is only displayed if this page appears on a "Sub Page Listing".
		///</summary>
		[ImplementPropertyType("pageSummary")]
		public IHtmlString PageSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("pageSummary"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Sub navigation link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subNavigationLinkText")]
		public string SubNavigationLinkText
		{
			get { return this.GetPropertyValue<string>("subNavigationLinkText"); }
		}

		///<summary>
		/// Subpage listing link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subpageListingLinkText")]
		public string SubpageListingLinkText
		{
			get { return this.GetPropertyValue<string>("subpageListingLinkText"); }
		}
	}

	/// <summary>Advanced Page (level 3)</summary>
	[PublishedContentModel("USNAdvancedPageLevel3")]
	public partial class UsnadvancedPageLevel3 : UsnadvancedPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNAdvancedPageLevel3";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnadvancedPageLevel3(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnadvancedPageLevel3, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return this.GetPropertyValue<bool>("hideBreadcrumb"); }
		}

		///<summary>
		/// Listing image: Listing image is only displayed if this page appears on a "Sub Page Listing".  {br}{br}  Image will be cropped to 380px x 285px.  {br}{br}  Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("pageListingImage")]
		public string PageListingImage
		{
			get { return this.GetPropertyValue<string>("pageListingImage"); }
		}

		///<summary>
		/// Listing image alt text
		///</summary>
		[ImplementPropertyType("pageListingImageAltText")]
		public string PageListingImageAltText
		{
			get { return this.GetPropertyValue<string>("pageListingImageAltText"); }
		}

		///<summary>
		/// Page summary: Summary text is only displayed if this page appears on a "Sub Page Listing".
		///</summary>
		[ImplementPropertyType("pageSummary")]
		public IHtmlString PageSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("pageSummary"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Sub navigation link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subNavigationLinkText")]
		public string SubNavigationLinkText
		{
			get { return this.GetPropertyValue<string>("subNavigationLinkText"); }
		}

		///<summary>
		/// Subpage listing link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subpageListingLinkText")]
		public string SubpageListingLinkText
		{
			get { return this.GetPropertyValue<string>("subpageListingLinkText"); }
		}
	}

	/// <summary>Global Settings</summary>
	[PublishedContentModel("USNGlobalSettings")]
	public partial class UsnglobalSettings : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNGlobalSettings";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnglobalSettings(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnglobalSettings, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Campaign Monitor API Key: If nothing is entered Newsletter Signup will not be available.
		///</summary>
		[ImplementPropertyType("campaignMonitorAPIKey")]
		public string CampaignMonitorApikey
		{
			get { return this.GetPropertyValue<string>("campaignMonitorAPIKey"); }
		}

		///<summary>
		/// Campaign Monitor Subscriber List ID: Newsletter Signup will only be available if a Subscriber List ID is available. Individual signup forms can have there own Subscriber List ID however the one entered here will be used as the default.
		///</summary>
		[ImplementPropertyType("defaultCampaignMonitorSubscriberListID")]
		public string DefaultCampaignMonitorSubscriberListID
		{
			get { return this.GetPropertyValue<string>("defaultCampaignMonitorSubscriberListID"); }
		}

		///<summary>
		/// Default background image: Image will be cropped to 1900px x 405px.  {br}{br}  Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("defaultHeaderBackgroundImage")]
		public string DefaultHeaderBackgroundImage
		{
			get { return this.GetPropertyValue<string>("defaultHeaderBackgroundImage"); }
		}

		///<summary>
		/// Default background image alt text
		///</summary>
		[ImplementPropertyType("defaultHeaderBackgroundImageAltText")]
		public string DefaultHeaderBackgroundImageAltText
		{
			get { return this.GetPropertyValue<string>("defaultHeaderBackgroundImageAltText"); }
		}

		///<summary>
		/// Text alignment
		///</summary>
		[ImplementPropertyType("defaultHeaderTextAlignment")]
		public object DefaultHeaderTextAlignment
		{
			get { return this.GetPropertyValue("defaultHeaderTextAlignment"); }
		}

		///<summary>
		/// Default page layout: If 'Content full width' is selected sub navigation and pods will be hidden.
		///</summary>
		[ImplementPropertyType("defaultPageLayout")]
		public object DefaultPageLayout
		{
			get { return this.GetPropertyValue("defaultPageLayout"); }
		}

		///<summary>
		/// Default sitewide pods: Select the default pods you would like to appear on the pages of your website.
		///</summary>
		[ImplementPropertyType("defaultSitewidePods")]
		public string DefaultSitewidePods
		{
			get { return this.GetPropertyValue<string>("defaultSitewidePods"); }
		}

		///<summary>
		/// Text colour scheme: Select the colour scheme of any text that appears over the image. A dark colour scheme will be used by default.
		///</summary>
		[ImplementPropertyType("defaultTextColourScheme")]
		public object DefaultTextColourScheme
		{
			get { return this.GetPropertyValue("defaultTextColourScheme"); }
		}

		///<summary>
		/// Examine search provider name: Enter the name of your Examine search provider defined in /Config/ExamineSettings.config  {br}{br}  If nothing is entered the search form will not appear.
		///</summary>
		[ImplementPropertyType("examineSearchProviderName")]
		public string ExamineSearchProviderName
		{
			get { return this.GetPropertyValue<string>("examineSearchProviderName"); }
		}

		///<summary>
		/// Facebook link
		///</summary>
		[ImplementPropertyType("facebookLink")]
		public string FacebookLink
		{
			get { return this.GetPropertyValue<string>("facebookLink"); }
		}

		///<summary>
		/// Favicon and touch icons: This image will be used for your website favicon and device bookmarks. We suggest that you use an image of at least 310x310 pixels.
		///</summary>
		[ImplementPropertyType("faviconAndTouchIcons")]
		public string FaviconAndTouchIcons
		{
			get { return this.GetPropertyValue<string>("faviconAndTouchIcons"); }
		}

		///<summary>
		/// Flickr link
		///</summary>
		[ImplementPropertyType("flickrLink")]
		public string FlickrLink
		{
			get { return this.GetPropertyValue<string>("flickrLink"); }
		}

		///<summary>
		/// Address
		///</summary>
		[ImplementPropertyType("footerAddress")]
		public IHtmlString FooterAddress
		{
			get { return this.GetPropertyValue<IHtmlString>("footerAddress"); }
		}

		///<summary>
		/// Company name
		///</summary>
		[ImplementPropertyType("footerCompanyName")]
		public string FooterCompanyName
		{
			get { return this.GetPropertyValue<string>("footerCompanyName"); }
		}

		///<summary>
		/// Other contact information
		///</summary>
		[ImplementPropertyType("footerOtherContactInformation")]
		public IHtmlString FooterOtherContactInformation
		{
			get { return this.GetPropertyValue<IHtmlString>("footerOtherContactInformation"); }
		}

		///<summary>
		/// Footer scripts: Anything you enter here will be placed before the closing &lt;/body&gt; tag on every page of your website.
		///</summary>
		[ImplementPropertyType("footerScripts")]
		public string FooterScripts
		{
			get { return this.GetPropertyValue<string>("footerScripts"); }
		}

		///<summary>
		/// Google business link: This must be a business page, not a user page.
		///</summary>
		[ImplementPropertyType("googleBusinessLink")]
		public string GoogleBusinessLink
		{
			get { return this.GetPropertyValue<string>("googleBusinessLink"); }
		}

		///<summary>
		/// Google+ link
		///</summary>
		[ImplementPropertyType("googleLink")]
		public string GoogleLink
		{
			get { return this.GetPropertyValue<string>("googleLink"); }
		}

		///<summary>
		/// Header scripts: Example usage would be for entering Google Analytics Script code.  {br}{br}  Anything you enter here will be placed before the closing &lt;/head&gt; tag on every page of your website.
		///</summary>
		[ImplementPropertyType("headerScripts")]
		public string HeaderScripts
		{
			get { return this.GetPropertyValue<string>("headerScripts"); }
		}

		///<summary>
		/// Instagram link
		///</summary>
		[ImplementPropertyType("instagramLink")]
		public string InstagramLink
		{
			get { return this.GetPropertyValue<string>("instagramLink"); }
		}

		///<summary>
		/// LinkedIn link
		///</summary>
		[ImplementPropertyType("linkedInLink")]
		public string LinkedInLink
		{
			get { return this.GetPropertyValue<string>("linkedInLink"); }
		}

		///<summary>
		/// Open Graph default image: This is the default Open Graph image associated with your media. We suggest that you use an image of at least 1200x630 pixels.
		///</summary>
		[ImplementPropertyType("openGraphDefaultImage")]
		public string OpenGraphDefaultImage
		{
			get { return this.GetPropertyValue<string>("openGraphDefaultImage"); }
		}

		///<summary>
		/// Default link: Use the 'Caption' field to override the default link text.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("outroDefaultLink")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker OutroDefaultLink
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("outroDefaultLink"); }
		}

		///<summary>
		/// Default text
		///</summary>
		[ImplementPropertyType("outroDefaultText")]
		public IHtmlString OutroDefaultText
		{
			get { return this.GetPropertyValue<IHtmlString>("outroDefaultText"); }
		}

		///<summary>
		/// Pinterest link
		///</summary>
		[ImplementPropertyType("pinterestLink")]
		public string PinterestLink
		{
			get { return this.GetPropertyValue<string>("pinterestLink"); }
		}

		///<summary>
		/// RSS Feed
		///</summary>
		[ImplementPropertyType("rssFeedLink")]
		public object RssFeedLink
		{
			get { return this.GetPropertyValue("rssFeedLink"); }
		}

		///<summary>
		/// Search results page: If no page is selected the search form will not appear.
		///</summary>
		[ImplementPropertyType("searchResultsPage")]
		public object SearchResultsPage
		{
			get { return this.GetPropertyValue("searchResultsPage"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("socialHeading")]
		public string SocialHeading
		{
			get { return this.GetPropertyValue<string>("socialHeading"); }
		}

		///<summary>
		/// Tumblr link
		///</summary>
		[ImplementPropertyType("tumblrLink")]
		public string TumblrLink
		{
			get { return this.GetPropertyValue<string>("tumblrLink"); }
		}

		///<summary>
		/// Twitter link
		///</summary>
		[ImplementPropertyType("twitterLink")]
		public string TwitterLink
		{
			get { return this.GetPropertyValue<string>("twitterLink"); }
		}

		///<summary>
		/// Vimeo link
		///</summary>
		[ImplementPropertyType("vimeoLink")]
		public string VimeoLink
		{
			get { return this.GetPropertyValue<string>("vimeoLink"); }
		}

		///<summary>
		/// Website logo: We suggest that you use an image of at least 240 pixels in height. This is to ensure your logo is ready for both retina and non-retina displays.
		///</summary>
		[ImplementPropertyType("websiteLogo")]
		public string WebsiteLogo
		{
			get { return this.GetPropertyValue<string>("websiteLogo"); }
		}

		///<summary>
		/// Website name: The text entered here will be be added to the default Meta title of your webpages and used for the hidden text behind your website logo.
		///</summary>
		[ImplementPropertyType("websiteName")]
		public string WebsiteName
		{
			get { return this.GetPropertyValue<string>("websiteName"); }
		}

		///<summary>
		/// YouTube link
		///</summary>
		[ImplementPropertyType("youTubeLink")]
		public string YouTubeLink
		{
			get { return this.GetPropertyValue<string>("youTubeLink"); }
		}
	}

	/// <summary>Homepage</summary>
	[PublishedContentModel("USNHomepage")]
	public partial class Usnhomepage : UsncontentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNHomepage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usnhomepage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usnhomepage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return this.GetPropertyValue<bool>("hideBreadcrumb"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Website configuration node: Select the 'Website Configuration' node that will control the global properties of this website.
		///</summary>
		[ImplementPropertyType("websiteConfigurationNode")]
		public object WebsiteConfigurationNode
		{
			get { return this.GetPropertyValue("websiteConfigurationNode"); }
		}
	}

	/// <summary>Navigation</summary>
	[PublishedContentModel("USNNavigation")]
	public partial class Usnnavigation : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNNavigation";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usnnavigation(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usnnavigation, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Display sub pages: Tick this box to include sub pages in the "Main Navigation".
		///</summary>
		[ImplementPropertyType("displaySubPages")]
		public bool DisplaySubPages
		{
			get { return this.GetPropertyValue<bool>("displaySubPages"); }
		}

		///<summary>
		/// Footer navigation: Select the links you would like to appear on the "Footer Navigation" of your website.  {br}{br}  The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("footerNavigation")]
		public Newtonsoft.Json.Linq.JArray FooterNavigation
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JArray>("footerNavigation"); }
		}

		///<summary>
		/// Quick links: Select the links you would like to appear on the "Quick links" section of your website.  {br}{br}  The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("footerQuickLinks")]
		public Newtonsoft.Json.Linq.JArray FooterQuickLinks
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JArray>("footerQuickLinks"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("footerQuickLinksHeading")]
		public string FooterQuickLinksHeading
		{
			get { return this.GetPropertyValue<string>("footerQuickLinksHeading"); }
		}

		///<summary>
		/// Logged in members navigation: Select the pages you would like to appear on the "Logged in Members Navigation" of your website.  The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("loggedInMembersNavigation")]
		public Newtonsoft.Json.Linq.JArray LoggedInMembersNavigation
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JArray>("loggedInMembersNavigation"); }
		}

		///<summary>
		/// Login page: If nothing is selected the "Members Navigation" will be hidden.
		///</summary>
		[ImplementPropertyType("loginPage")]
		public object LoginPage
		{
			get { return this.GetPropertyValue("loginPage"); }
		}

		///<summary>
		/// Main navigation: Select the links you would like to appear on the "Main Navigation" of your website.  {br}{br}  The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("mainNavigation")]
		public Newtonsoft.Json.Linq.JArray MainNavigation
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JArray>("mainNavigation"); }
		}

		///<summary>
		/// Navigation heading: This will override the default heading defined in the Dictionary Section of Umbraco.
		///</summary>
		[ImplementPropertyType("membersNavigationHeading")]
		public string MembersNavigationHeading
		{
			get { return this.GetPropertyValue<string>("membersNavigationHeading"); }
		}

		///<summary>
		/// Top navigation: Select the links you would like to appear on the "Top Navigation" of your website.  {br}{br}  The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("topNavigation")]
		public Newtonsoft.Json.Linq.JArray TopNavigation
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JArray>("topNavigation"); }
		}
	}

	/// <summary>Settings Folder</summary>
	[PublishedContentModel("USNSettingsFolder")]
	public partial class UsnsettingsFolder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNSettingsFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnsettingsFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnsettingsFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: This folder is used to manage your website configuration.  {br}{br}  DO NOT delete or rename this folder.
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Sitewide Pods Master</summary>
	[PublishedContentModel("USNSitewidePodsMaster")]
	public partial class UsnsitewidePodsMaster : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNSitewidePodsMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnsitewidePodsMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnsitewidePodsMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Blockquote Pod</summary>
	[PublishedContentModel("USN_SWP_BlockquotePod")]
	public partial class Usn_Swp_BlockquotePod : UsnsitewidePodsMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_BlockquotePod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_BlockquotePod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_BlockquotePod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Cite
		///</summary>
		[ImplementPropertyType("cite")]
		public string Cite
		{
			get { return this.GetPropertyValue<string>("cite"); }
		}

		///<summary>
		/// Quote
		///</summary>
		[ImplementPropertyType("quote")]
		public string Quote
		{
			get { return this.GetPropertyValue<string>("quote"); }
		}
	}

	/// <summary>Code Pod</summary>
	[PublishedContentModel("USN_SWP_CodePod")]
	public partial class Usn_Swp_CodePod : UsnsitewidePodsMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_CodePod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_CodePod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_CodePod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Code: Enter your raw code here. This can be JavaScript, HTML etc.
		///</summary>
		[ImplementPropertyType("code")]
		public string Code
		{
			get { return this.GetPropertyValue<string>("code"); }
		}
	}

	/// <summary>General Pod</summary>
	[PublishedContentModel("USN_SWP_GeneralPod")]
	public partial class Usn_Swp_GeneralPod : UsnsitewidePodsMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_GeneralPod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_GeneralPod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_GeneralPod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("podHeading")]
		public string PodHeading
		{
			get { return this.GetPropertyValue<string>("podHeading"); }
		}

		///<summary>
		/// Link: Use the 'Caption' field to override the default link text.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("podLink")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker PodLink
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("podLink"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("podText")]
		public IHtmlString PodText
		{
			get { return this.GetPropertyValue<IHtmlString>("podText"); }
		}
	}

	/// <summary>Image Pod</summary>
	[PublishedContentModel("USN_SWP_ImagePod")]
	public partial class Usn_Swp_ImagePod : UsnsitewidePodsMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_ImagePod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_ImagePod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_ImagePod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image link: Link will only be used if light window is disabled.
		///</summary>
		[ImplementPropertyType("imageLink")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker ImageLink
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("imageLink"); }
		}

		///<summary>
		/// Light window image: Image will be cropped to 345px x 260px and displayed as the thumbnail.  {br}{br}  Focal point of the image is defined within your "Media" section.   {br}{br}  The original image you upload will be displayed within the light window uncropped.
		///</summary>
		[ImplementPropertyType("lightWindowImage")]
		public string LightWindowImage
		{
			get { return this.GetPropertyValue<string>("lightWindowImage"); }
		}

		///<summary>
		/// Light window text: This text will be displayed along with your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowText")]
		public string LightWindowText
		{
			get { return this.GetPropertyValue<string>("lightWindowText"); }
		}

		///<summary>
		/// Thumbnail image alt text
		///</summary>
		[ImplementPropertyType("thumbnailImageAltText")]
		public string ThumbnailImageAltText
		{
			get { return this.GetPropertyValue<string>("thumbnailImageAltText"); }
		}

		///<summary>
		/// Tick to disable light window
		///</summary>
		[ImplementPropertyType("tickToDisableLightWindow")]
		public bool TickToDisableLightWindow
		{
			get { return this.GetPropertyValue<bool>("tickToDisableLightWindow"); }
		}
	}

	/// <summary>Listing Pod</summary>
	[PublishedContentModel("USN_SWP_ListingPod")]
	public partial class Usn_Swp_ListingPod : UsnsitewidePodsMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_ListingPod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_ListingPod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_ListingPod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Link to listing: Link this to a page that contains sub pages. Sub pages will be listed.  {br}{br}  Use the 'Caption' field to override the default link text.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("linkToListing")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker LinkToListing
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("linkToListing"); }
		}

		///<summary>
		/// Pages to display
		///</summary>
		[ImplementPropertyType("pagesToDisplay")]
		public string PagesToDisplay
		{
			get { return this.GetPropertyValue<string>("pagesToDisplay"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("podTitle")]
		public string PodTitle
		{
			get { return this.GetPropertyValue<string>("podTitle"); }
		}
	}

	/// <summary>Newsletter Signup Pod</summary>
	[PublishedContentModel("USN_SWP_NewsletterSignupPod")]
	public partial class Usn_Swp_NewsletterSignupPod : UsnsitewidePodsMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_NewsletterSignupPod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_NewsletterSignupPod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_NewsletterSignupPod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Campaign Monitor Subscriber List ID: Newsletter Signup will only be available if a Subscriber List ID is available. Use this field to override the default Subscriber List ID in "Global Settings" if present.
		///</summary>
		[ImplementPropertyType("campaignMonitorSubscriberListID")]
		public string CampaignMonitorSubscriberListID
		{
			get { return this.GetPropertyValue<string>("campaignMonitorSubscriberListID"); }
		}

		///<summary>
		/// Button text
		///</summary>
		[ImplementPropertyType("newsletterButtonText")]
		public string NewsletterButtonText
		{
			get { return this.GetPropertyValue<string>("newsletterButtonText"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("newsletterHeading")]
		public string NewsletterHeading
		{
			get { return this.GetPropertyValue<string>("newsletterHeading"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("newsletterIntroduction")]
		public IHtmlString NewsletterIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("newsletterIntroduction"); }
		}

		///<summary>
		/// Submission message
		///</summary>
		[ImplementPropertyType("submissionMessage")]
		public IHtmlString SubmissionMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("submissionMessage"); }
		}
	}

	/// <summary>Sitewide Pods Folder</summary>
	[PublishedContentModel("USNSitewidePods")]
	public partial class UsnsitewidePods : UsnsitewidePodsMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNSitewidePods";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnsitewidePods(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnsitewidePods, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: Create items below this folder to add new "Sitewide Pods".  {br}{br}  DO NOT delete or rename this folder.
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Standard Component Master</summary>
	[PublishedContentModel("USNStandardComponentMaster")]
	public partial class UsnstandardComponentMaster : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardComponentMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardComponentMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardComponentMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Standard Component Alert</summary>
	[PublishedContentModel("USN_SC_Alert_AN")]
	public partial class Usn_Sc_Alert_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_Alert_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_Alert_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_Alert_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Colour
		///</summary>
		[ImplementPropertyType("alertColour")]
		public object AlertColour
		{
			get { return this.GetPropertyValue("alertColour"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("alertText")]
		public IHtmlString AlertText
		{
			get { return this.GetPropertyValue<IHtmlString>("alertText"); }
		}

		///<summary>
		/// Hide close option
		///</summary>
		[ImplementPropertyType("hideCloseOption")]
		public bool HideCloseOption
		{
			get { return this.GetPropertyValue<bool>("hideCloseOption"); }
		}
	}

	/// <summary>Standard Component Blockquote</summary>
	[PublishedContentModel("USN_SC_Blockquote_AN")]
	public partial class Usn_Sc_Blockquote_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_Blockquote_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_Blockquote_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_Blockquote_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Cite
		///</summary>
		[ImplementPropertyType("cite")]
		public string Cite
		{
			get { return this.GetPropertyValue<string>("cite"); }
		}

		///<summary>
		/// Quote
		///</summary>
		[ImplementPropertyType("quote")]
		public string Quote
		{
			get { return this.GetPropertyValue<string>("quote"); }
		}
	}

	/// <summary>Standard Component Code Section</summary>
	[PublishedContentModel("USN_SC_CodeSection_AN")]
	public partial class Usn_Sc_CodeSection_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_CodeSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_CodeSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_CodeSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Code: Enter your raw code here. This can be JavaScript, HTML etc.
		///</summary>
		[ImplementPropertyType("code")]
		public string Code
		{
			get { return this.GetPropertyValue<string>("code"); }
		}
	}

	/// <summary>Standard Component Contact Form</summary>
	[PublishedContentModel("USN_SC_ContactForm_AN")]
	public partial class Usn_Sc_ContactForm_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_ContactForm_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_ContactForm_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_ContactForm_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Campaign Monitor Subscriber List ID: Newsletter Signup will only be available if a Subscriber List ID is available. Use this field to override the default Subscriber List ID in "Global Settings" if present.
		///</summary>
		[ImplementPropertyType("campaignMonitorSubscriberListID")]
		public string CampaignMonitorSubscriberListID
		{
			get { return this.GetPropertyValue<string>("campaignMonitorSubscriberListID"); }
		}

		///<summary>
		/// Button text
		///</summary>
		[ImplementPropertyType("contactFormButtonText")]
		public string ContactFormButtonText
		{
			get { return this.GetPropertyValue<string>("contactFormButtonText"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("contactFormHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading ContactFormHeading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("contactFormHeading"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("contactFormIntroduction")]
		public IHtmlString ContactFormIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("contactFormIntroduction"); }
		}

		///<summary>
		/// Recipient Email address
		///</summary>
		[ImplementPropertyType("recipientEmailAddress")]
		public string RecipientEmailAddress
		{
			get { return this.GetPropertyValue<string>("recipientEmailAddress"); }
		}

		///<summary>
		/// Submission message
		///</summary>
		[ImplementPropertyType("submissionMessage")]
		public IHtmlString SubmissionMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("submissionMessage"); }
		}
	}

	/// <summary>Standard Component Gallery Image</summary>
	[PublishedContentModel("USN_SC_GalleryImage")]
	public partial class Usn_Sc_GalleryImage : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_GalleryImage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_GalleryImage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_GalleryImage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image link: Link will only be used if light window is disabled.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("imageLink")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker ImageLink
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("imageLink"); }
		}

		///<summary>
		/// Light window image: Image will be cropped to 345px x 260px and displayed as the gallery thumbnail.  {br}{br}  Focal point of the image is defined within your "Media" section.   {br}{br}  The original image you upload will be displayed within the light window uncropped.
		///</summary>
		[ImplementPropertyType("lightWindowImage")]
		public string LightWindowImage
		{
			get { return this.GetPropertyValue<string>("lightWindowImage"); }
		}

		///<summary>
		/// Light window text: This text will be displayed along with your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowText")]
		public string LightWindowText
		{
			get { return this.GetPropertyValue<string>("lightWindowText"); }
		}

		///<summary>
		/// Thumbnail image alt text
		///</summary>
		[ImplementPropertyType("thumbnailImageAltText")]
		public string ThumbnailImageAltText
		{
			get { return this.GetPropertyValue<string>("thumbnailImageAltText"); }
		}

		///<summary>
		/// Tick to disable light window
		///</summary>
		[ImplementPropertyType("tickToDisableLightWindow")]
		public bool TickToDisableLightWindow
		{
			get { return this.GetPropertyValue<bool>("tickToDisableLightWindow"); }
		}
	}

	/// <summary>Standard Component Gallery Section</summary>
	[PublishedContentModel("USN_SC_GallerySection_AN")]
	public partial class Usn_Sc_GallerySection_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_GallerySection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_GallerySection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_GallerySection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: "Gallery Images" or "Gallery Videos" must be added below this folder for it to function correctly.
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Standard Component Gallery Video</summary>
	[PublishedContentModel("USN_SC_GalleryVideo")]
	public partial class Usn_Sc_GalleryVideo : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_GalleryVideo";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_GalleryVideo(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_GalleryVideo, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Thumbnail image: This image is optional. If you do not upload an image, a thumbnail image will be automatically generated for you from the associated video.  {br}{br}  Image will be cropped to 345px x 260px.  {br}{br}  Focal point of the image is defined within your "Media" section. 
		///</summary>
		[ImplementPropertyType("galleryThumbnailImage")]
		public string GalleryThumbnailImage
		{
			get { return this.GetPropertyValue<string>("galleryThumbnailImage"); }
		}

		///<summary>
		/// Video: Copy the full URL for your video from the address bar or share link provided. (YouTube or Vimeo only)
		///</summary>
		[ImplementPropertyType("galleryVideo")]
		public string GalleryVideo
		{
			get { return this.GetPropertyValue<string>("galleryVideo"); }
		}

		///<summary>
		/// Light window text: This text will be displayed along with your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowText")]
		public string LightWindowText
		{
			get { return this.GetPropertyValue<string>("lightWindowText"); }
		}

		///<summary>
		/// Thumbnail image alt text
		///</summary>
		[ImplementPropertyType("thumbnailImageAltText")]
		public string ThumbnailImageAltText
		{
			get { return this.GetPropertyValue<string>("thumbnailImageAltText"); }
		}
	}

	/// <summary>Standard Component Links Section</summary>
	[PublishedContentModel("USN_SC_LinksSection_AN")]
	public partial class Usn_Sc_LinksSection_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_LinksSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_LinksSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_LinksSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Links: The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("groupLinks")]
		public Newtonsoft.Json.Linq.JArray GroupLinks
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JArray>("groupLinks"); }
		}
	}

	/// <summary>Standard Component List Item</summary>
	[PublishedContentModel("USN_SC_ListItem")]
	public partial class Usn_Sc_ListItem : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_ListItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_ListItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_ListItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image: Image will be cropped to 345px x 260px.  {br}{br}  Focal point of the image is defined within your "Media" section. 
		///</summary>
		[ImplementPropertyType("listItemImage")]
		public string ListItemImage
		{
			get { return this.GetPropertyValue<string>("listItemImage"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("listItemImageAltText")]
		public string ListItemImageAltText
		{
			get { return this.GetPropertyValue<string>("listItemImageAltText"); }
		}

		///<summary>
		/// Link: Use the 'Caption' field to override the default link text.  {br}{br}  The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("listItemLink")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker ListItemLink
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("listItemLink"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("listItemText")]
		public IHtmlString ListItemText
		{
			get { return this.GetPropertyValue<IHtmlString>("listItemText"); }
		}
	}

	/// <summary>Standard Component List Section</summary>
	[PublishedContentModel("USN_SC_ListSection_AN")]
	public partial class Usn_Sc_ListSection_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_ListSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_ListSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_ListSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: "List Items" must be added below this folder for it to function correctly.
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Standard Component Newsletter Signup Form</summary>
	[PublishedContentModel("USN_NewsletterSignup_AN")]
	public partial class Usn_NewsletterSignup_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_NewsletterSignup_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_NewsletterSignup_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_NewsletterSignup_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Campaign Monitor Subscriber List ID: Newsletter Signup will only be available if a Subscriber List ID is available. Use this field to override the default Subscriber List ID in "Global Settings" if present.
		///</summary>
		[ImplementPropertyType("campaignMonitorSubscriberListID")]
		public string CampaignMonitorSubscriberListID
		{
			get { return this.GetPropertyValue<string>("campaignMonitorSubscriberListID"); }
		}

		///<summary>
		/// Button text
		///</summary>
		[ImplementPropertyType("newsletterButtonText")]
		public string NewsletterButtonText
		{
			get { return this.GetPropertyValue<string>("newsletterButtonText"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("newsletterHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading NewsletterHeading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("newsletterHeading"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("newsletterIntroduction")]
		public IHtmlString NewsletterIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("newsletterIntroduction"); }
		}

		///<summary>
		/// Submission message
		///</summary>
		[ImplementPropertyType("submissionMessage")]
		public IHtmlString SubmissionMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("submissionMessage"); }
		}
	}

	/// <summary>Standard Component Repeater Item</summary>
	[PublishedContentModel("USN_SC_RepeaterItem")]
	public partial class Usn_Sc_RepeaterItem : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_RepeaterItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_RepeaterItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_RepeaterItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("repeaterText")]
		public IHtmlString RepeaterText
		{
			get { return this.GetPropertyValue<IHtmlString>("repeaterText"); }
		}
	}

	/// <summary>Standard Component Repeater Section</summary>
	[PublishedContentModel("USN_SC_RepeaterSection_AN")]
	public partial class Usn_Sc_RepeaterSection_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_RepeaterSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_RepeaterSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_RepeaterSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: "Repeater Items" must be added below this folder for it to function correctly.
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}

		///<summary>
		/// Style
		///</summary>
		[ImplementPropertyType("repeaterStyle")]
		public object RepeaterStyle
		{
			get { return this.GetPropertyValue("repeaterStyle"); }
		}
	}

	/// <summary>Standard Component Resource Item</summary>
	[PublishedContentModel("USN_SC_ResourceItem")]
	public partial class Usn_Sc_ResourceItem : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_ResourceItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_ResourceItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_ResourceItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Attachment: The tab that is open will be used.
		///</summary>
		[ImplementPropertyType("attachement")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker Attachement
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("attachement"); }
		}

		///<summary>
		/// Optional additional information
		///</summary>
		[ImplementPropertyType("optionalAdditionalInformation")]
		public IHtmlString OptionalAdditionalInformation
		{
			get { return this.GetPropertyValue<IHtmlString>("optionalAdditionalInformation"); }
		}
	}

	/// <summary>Standard Component Resources Section</summary>
	[PublishedContentModel("USN_SC_ResourcesSection_AN")]
	public partial class Usn_Sc_ResourcesSection_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_ResourcesSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_ResourcesSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_ResourcesSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: "Resource Items" must be added below this folder for it to function correctly.
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Standard Component Slideshow Image</summary>
	[PublishedContentModel("USN_SC_SlideshowImage")]
	public partial class Usn_Sc_SlideshowImage : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_SlideshowImage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_SlideshowImage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_SlideshowImage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image: Image will be cropped to 1140px x 550px.  {br}{br}  Focal point of the image is defined within your "Media" section. 
		///</summary>
		[ImplementPropertyType("slideshowImage")]
		public string SlideshowImage
		{
			get { return this.GetPropertyValue<string>("slideshowImage"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("slideshowImageAltText")]
		public string SlideshowImageAltText
		{
			get { return this.GetPropertyValue<string>("slideshowImageAltText"); }
		}

		///<summary>
		/// Image caption
		///</summary>
		[ImplementPropertyType("slideshowImageCaption")]
		public string SlideshowImageCaption
		{
			get { return this.GetPropertyValue<string>("slideshowImageCaption"); }
		}
	}

	/// <summary>Standard Component Slideshow Section</summary>
	[PublishedContentModel("USN_SC_SlideshowSection_AN")]
	public partial class Usn_Sc_SlideshowSection_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_SlideshowSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_SlideshowSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_SlideshowSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: "Slideshow Images" must be added below this folder for it to function correctly.
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Standard Component Text Section</summary>
	[PublishedContentModel("USN_SC_TextSection_AN")]
	public partial class Usn_Sc_TextSection_AN : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_TextSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_TextSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_TextSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("textSection")]
		public IHtmlString TextSection
		{
			get { return this.GetPropertyValue<IHtmlString>("textSection"); }
		}
	}

	/// <summary>Standard Page Components Folder</summary>
	[PublishedContentModel("USNStandardPageComponents")]
	public partial class UsnstandardPageComponents : UsnstandardComponentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardPageComponents";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardPageComponents(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardPageComponents, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: Create items below this folder to add more advanced features to your page.   {br}{br}  DO NOT delete or rename this folder.
		///</summary>
		[ImplementPropertyType("instructions")]
		public string Instructions
		{
			get { return this.GetPropertyValue<string>("instructions"); }
		}
	}

	/// <summary>Standard Page Master</summary>
	[PublishedContentModel("USNStandardPageMaster")]
	public partial class UsnstandardPageMaster : UsncontentMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardPageMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardPageMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardPageMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Main content
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Background image: Image will be cropped to 1900px x 405px.  {br}{br}  Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("headerBackgroundImage")]
		public string HeaderBackgroundImage
		{
			get { return this.GetPropertyValue<string>("headerBackgroundImage"); }
		}

		///<summary>
		/// Background image alt text
		///</summary>
		[ImplementPropertyType("headerBackgroundImageAltText")]
		public string HeaderBackgroundImageAltText
		{
			get { return this.GetPropertyValue<string>("headerBackgroundImageAltText"); }
		}

		///<summary>
		/// Text alignment
		///</summary>
		[ImplementPropertyType("headerTextAlignment")]
		public object HeaderTextAlignment
		{
			get { return this.GetPropertyValue("headerTextAlignment"); }
		}

		///<summary>
		/// Hide header image section: Tick this box to hide the header image section if one has been added to "Global Settings" or above.
		///</summary>
		[ImplementPropertyType("hideHeaderImageSection")]
		public bool HideHeaderImageSection
		{
			get { return this.GetPropertyValue<bool>("hideHeaderImageSection"); }
		}

		///<summary>
		/// Main image: Image will be cropped to 1140px x 550px.  {br}{br}  Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("mainImage")]
		public string MainImage
		{
			get { return this.GetPropertyValue<string>("mainImage"); }
		}

		///<summary>
		/// Main image alt text
		///</summary>
		[ImplementPropertyType("mainImageAltText")]
		public string MainImageAltText
		{
			get { return this.GetPropertyValue<string>("mainImageAltText"); }
		}

		///<summary>
		/// Main image caption
		///</summary>
		[ImplementPropertyType("mainImageCaption")]
		public string MainImageCaption
		{
			get { return this.GetPropertyValue<string>("mainImageCaption"); }
		}

		///<summary>
		/// Page title: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("onPageTitle")]
		public string OnPageTitle
		{
			get { return this.GetPropertyValue<string>("onPageTitle"); }
		}

		///<summary>
		/// Override default header image section: Tick this box to override the default header image section if content has been added to "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultHeaderImageSection")]
		public bool OverrideDefaultHeaderImageSection
		{
			get { return this.GetPropertyValue<bool>("overrideDefaultHeaderImageSection"); }
		}

		///<summary>
		/// Text colour scheme: Select the colour scheme of any text that appears over the image. A dark colour scheme will be used by default.
		///</summary>
		[ImplementPropertyType("textColourScheme")]
		public object TextColourScheme
		{
			get { return this.GetPropertyValue("textColourScheme"); }
		}
	}

	/// <summary>Blog Landing Page</summary>
	[PublishedContentModel("USNBlogLandingPage")]
	public partial class UsnblogLandingPage : UsnstandardPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogLandingPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogLandingPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogLandingPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Blog listing page size: Enter the number of articles you would like to appear per page.
		///</summary>
		[ImplementPropertyType("blogListingPageSize")]
		public string BlogListingPageSize
		{
			get { return this.GetPropertyValue<string>("blogListingPageSize"); }
		}

		///<summary>
		/// Summary text character count: Enter the number of characters of text you would like displayed from the beginning of each blog article. If nothing is entered, no summary text will be displayed.
		///</summary>
		[ImplementPropertyType("blogSummaryTextCharacterCount")]
		public string BlogSummaryTextCharacterCount
		{
			get { return this.GetPropertyValue<string>("blogSummaryTextCharacterCount"); }
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Default author: Select the default author that will be applied to all blog posts.
		///</summary>
		[ImplementPropertyType("defaultAuthor")]
		public string DefaultAuthor
		{
			get { return this.GetPropertyValue<string>("defaultAuthor"); }
		}

		///<summary>
		/// Disqus username: If nothing is entered, blog commenting will be disabled.
		///</summary>
		[ImplementPropertyType("disqusUsername")]
		public string DisqusUsername
		{
			get { return this.GetPropertyValue<string>("disqusUsername"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return this.GetPropertyValue<bool>("hideBreadcrumb"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected. If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public object PageLayout
		{
			get { return this.GetPropertyValue("pageLayout"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}
	}

	/// <summary>Blog Post</summary>
	[PublishedContentModel("USNStandardPageBlogPost")]
	public partial class UsnstandardPageBlogPost : UsnstandardPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardPageBlogPost";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardPageBlogPost(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardPageBlogPost, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Listing image: Image will be cropped to 1140px x 550px.  {br}{br}  Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("blogListingImage")]
		public string BlogListingImage
		{
			get { return this.GetPropertyValue<string>("blogListingImage"); }
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Disable comments: Tick this box to disable commenting for this post. This is only relevant if you have entered a "Disqus username" on your "Blog Landing Page".
		///</summary>
		[ImplementPropertyType("disableComments")]
		public bool DisableComments
		{
			get { return this.GetPropertyValue<bool>("disableComments"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return this.GetPropertyValue<bool>("hideBreadcrumb"); }
		}

		///<summary>
		/// Listing image alt text
		///</summary>
		[ImplementPropertyType("listingImageAltText")]
		public string ListingImageAltText
		{
			get { return this.GetPropertyValue<string>("listingImageAltText"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected. If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public object PageLayout
		{
			get { return this.GetPropertyValue("pageLayout"); }
		}

		///<summary>
		/// Author
		///</summary>
		[ImplementPropertyType("postAuthor")]
		public string PostAuthor
		{
			get { return this.GetPropertyValue<string>("postAuthor"); }
		}

		///<summary>
		/// Categories: If selecting a child category make sure you also select the parent categories.
		///</summary>
		[ImplementPropertyType("postCategories")]
		public string PostCategories
		{
			get { return this.GetPropertyValue<string>("postCategories"); }
		}

		///<summary>
		/// Post date
		///</summary>
		[ImplementPropertyType("postDate")]
		public DateTime PostDate
		{
			get { return this.GetPropertyValue<DateTime>("postDate"); }
		}

		///<summary>
		/// Post summary: If nothing is entered here the summary will be extracted from the beginning of the "Main Content" of your post and the character count will be based on the settings defined on your "Blog" landing page.
		///</summary>
		[ImplementPropertyType("postSummary")]
		public IHtmlString PostSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("postSummary"); }
		}
	}

	/// <summary>Login Page</summary>
	[PublishedContentModel("USNLoginPage")]
	public partial class UsnloginPage : UsnstandardPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNLoginPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnloginPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnloginPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return this.GetPropertyValue<bool>("hideBreadcrumb"); }
		}

		///<summary>
		/// Login form button text
		///</summary>
		[ImplementPropertyType("loginFormButtonText")]
		public string LoginFormButtonText
		{
			get { return this.GetPropertyValue<string>("loginFormButtonText"); }
		}

		///<summary>
		/// Login success page: Select the page to go to when login is successful.
		///</summary>
		[ImplementPropertyType("loginSuccessPage")]
		public object LoginSuccessPage
		{
			get { return this.GetPropertyValue("loginSuccessPage"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected. If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public object PageLayout
		{
			get { return this.GetPropertyValue("pageLayout"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}
	}

	/// <summary>Search Results Page</summary>
	[PublishedContentModel("USNSearchResultsPage")]
	public partial class UsnsearchResultsPage : UsnstandardPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNSearchResultsPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnsearchResultsPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnsearchResultsPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return this.GetPropertyValue<bool>("hideBreadcrumb"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected. If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public object PageLayout
		{
			get { return this.GetPropertyValue("pageLayout"); }
		}

		///<summary>
		/// Search results page size: Enter the number of search results you would like to appear per page.
		///</summary>
		[ImplementPropertyType("searchResultsPageSize")]
		public string SearchResultsPageSize
		{
			get { return this.GetPropertyValue<string>("searchResultsPageSize"); }
		}

		///<summary>
		/// Sitemap link text
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}
	}

	/// <summary>Sitemap Page</summary>
	[PublishedContentModel("USNSitemapPage")]
	public partial class UsnsitemapPage : UsnstandardPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNSitemapPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnsitemapPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnsitemapPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return this.GetPropertyValue<bool>("hideBreadcrumb"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected. If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public object PageLayout
		{
			get { return this.GetPropertyValue("pageLayout"); }
		}

		///<summary>
		/// Sitemap link text
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}
	}

	/// <summary>Standard Page (level 1)</summary>
	[PublishedContentModel("USNStandardPagelevel1")]
	public partial class UsnstandardPagelevel1 : UsnstandardPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardPagelevel1";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardPagelevel1(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardPagelevel1, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Display subpage listing: Tick this box to display a listing of any subpages that sit below this page.
		///</summary>
		[ImplementPropertyType("displaySubpageListing")]
		public bool DisplaySubpageListing
		{
			get { return this.GetPropertyValue<bool>("displaySubpageListing"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return this.GetPropertyValue<bool>("hideBreadcrumb"); }
		}

		///<summary>
		/// Hide sub navigation: Tick this box to hide the sub navigation menu from this page.
		///</summary>
		[ImplementPropertyType("hideSubNavigation")]
		public bool HideSubNavigation
		{
			get { return this.GetPropertyValue<bool>("hideSubNavigation"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected. If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public object PageLayout
		{
			get { return this.GetPropertyValue("pageLayout"); }
		}

		///<summary>
		/// Summary text character count: Enter the number of characters you would like displayed from the beginning of each page. If summary text has been entered this will be used instead. If nothing is entered, no summary text will be displayed.
		///</summary>
		[ImplementPropertyType("pageSummaryTextCharacterCount")]
		public string PageSummaryTextCharacterCount
		{
			get { return this.GetPropertyValue<string>("pageSummaryTextCharacterCount"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Sub navigation link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subNavigationLinkText")]
		public string SubNavigationLinkText
		{
			get { return this.GetPropertyValue<string>("subNavigationLinkText"); }
		}

		///<summary>
		/// Subpage listing layout: Layout will default to 'Vertical' if nothing is selected.
		///</summary>
		[ImplementPropertyType("subpageListingLayout")]
		public object SubpageListingLayout
		{
			get { return this.GetPropertyValue("subpageListingLayout"); }
		}
	}

	/// <summary>Standard Page (level 2)</summary>
	[PublishedContentModel("USNStandardPagelevel2")]
	public partial class UsnstandardPagelevel2 : UsnstandardPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardPagelevel2";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardPagelevel2(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardPagelevel2, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Display subpage listing: Tick this box to display a listing of any subpages that sit below this page.
		///</summary>
		[ImplementPropertyType("displaySubpageListing")]
		public bool DisplaySubpageListing
		{
			get { return this.GetPropertyValue<bool>("displaySubpageListing"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return this.GetPropertyValue<bool>("hideBreadcrumb"); }
		}

		///<summary>
		/// Hide sub navigation: Tick this box to hide the sub navigation menu from this page.
		///</summary>
		[ImplementPropertyType("hideSubNavigation")]
		public bool HideSubNavigation
		{
			get { return this.GetPropertyValue<bool>("hideSubNavigation"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected. If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public object PageLayout
		{
			get { return this.GetPropertyValue("pageLayout"); }
		}

		///<summary>
		/// Listing image: Listing image is only displayed if this page appears on a "Sub Page Listing".  {br}{br}  Image will be cropped to 380px x 285px.  {br}{br}  Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("pageListingImage")]
		public string PageListingImage
		{
			get { return this.GetPropertyValue<string>("pageListingImage"); }
		}

		///<summary>
		/// Listing image alt text
		///</summary>
		[ImplementPropertyType("pageListingImageAltText")]
		public string PageListingImageAltText
		{
			get { return this.GetPropertyValue<string>("pageListingImageAltText"); }
		}

		///<summary>
		/// Page summary: Summary text is only displayed if this page appears on a "Sub Page Listing".    If nothing is entered here the summary will be extracted from the beginning of the "Main Content" of this page and the character count will be based on the settings defined on this pages parent page.
		///</summary>
		[ImplementPropertyType("pageSummary")]
		public IHtmlString PageSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("pageSummary"); }
		}

		///<summary>
		/// Summary text character count: Enter the number of characters of text you would like displayed from the beginning of each sub page. If nothing is entered, no summary text will be displayed.
		///</summary>
		[ImplementPropertyType("pageSummaryTextCharacterCount")]
		public string PageSummaryTextCharacterCount
		{
			get { return this.GetPropertyValue<string>("pageSummaryTextCharacterCount"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Sub navigation link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subNavigationLinkText")]
		public string SubNavigationLinkText
		{
			get { return this.GetPropertyValue<string>("subNavigationLinkText"); }
		}

		///<summary>
		/// Subpage listing layout: Layout will default to 'Vertical' if nothing is selected.
		///</summary>
		[ImplementPropertyType("subpageListingLayout")]
		public object SubpageListingLayout
		{
			get { return this.GetPropertyValue("subpageListingLayout"); }
		}

		///<summary>
		/// Subpage listing link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subpageListingLinkText")]
		public string SubpageListingLinkText
		{
			get { return this.GetPropertyValue<string>("subpageListingLinkText"); }
		}
	}

	/// <summary>Standard Page (level 3)</summary>
	[PublishedContentModel("USNStandardPagelevel3")]
	public partial class UsnstandardPagelevel3 : UsnstandardPageMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardPagelevel3";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardPagelevel3(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardPagelevel3, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return this.GetPropertyValue<string>("breadcrumbLinkText"); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return this.GetPropertyValue<bool>("hideBreadcrumb"); }
		}

		///<summary>
		/// Hide sub navigation: Tick this box to hide the sub navigation menu from this page.
		///</summary>
		[ImplementPropertyType("hideSubNavigation")]
		public bool HideSubNavigation
		{
			get { return this.GetPropertyValue<bool>("hideSubNavigation"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected. If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public object PageLayout
		{
			get { return this.GetPropertyValue("pageLayout"); }
		}

		///<summary>
		/// Listing image: Listing image is only displayed if this page appears on a "Sub Page Listing".  {br}{br}  Image will be cropped to 380px x 285px.  {br}{br}  Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("pageListingImage")]
		public string PageListingImage
		{
			get { return this.GetPropertyValue<string>("pageListingImage"); }
		}

		///<summary>
		/// Listing image alt text
		///</summary>
		[ImplementPropertyType("pageListingImageAltText")]
		public string PageListingImageAltText
		{
			get { return this.GetPropertyValue<string>("pageListingImageAltText"); }
		}

		///<summary>
		/// Page summary: Summary text is only displayed if this page appears on a "Sub Page Listing".    If nothing is entered here the summary will be extracted from the beginning of the "Main Content" of this page and the character count will be based on the settings defined on this pages parent page.
		///</summary>
		[ImplementPropertyType("pageSummary")]
		public IHtmlString PageSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("pageSummary"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Sub navigation link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subNavigationLinkText")]
		public string SubNavigationLinkText
		{
			get { return this.GetPropertyValue<string>("subNavigationLinkText"); }
		}

		///<summary>
		/// Subpage listing link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subpageListingLinkText")]
		public string SubpageListingLinkText
		{
			get { return this.GetPropertyValue<string>("subpageListingLinkText"); }
		}
	}

	/// <summary>Video Pod</summary>
	[PublishedContentModel("USN_SWP_VideoPod")]
	public partial class Usn_Swp_VideoPod : UsnsitewidePodsMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_VideoPod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_VideoPod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_VideoPod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Light window text: This text will be displayed along with your video within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowText")]
		public string LightWindowText
		{
			get { return this.GetPropertyValue<string>("lightWindowText"); }
		}

		///<summary>
		/// Thumbnail image: This image is optional. If you do not upload an image, a thumbnail image will be automatically generated for you from the associated video.  {br}{br}  Image will be cropped to 345px x 260px.  {br}{br}  Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("podThumbnailImage")]
		public string PodThumbnailImage
		{
			get { return this.GetPropertyValue<string>("podThumbnailImage"); }
		}

		///<summary>
		/// Video: Copy the full URL for your video from the address bar or share link provided. (YouTube or Vimeo only)
		///</summary>
		[ImplementPropertyType("podVideo")]
		public string PodVideo
		{
			get { return this.GetPropertyValue<string>("podVideo"); }
		}

		///<summary>
		/// Thumbnail image alt text
		///</summary>
		[ImplementPropertyType("thumbnailImageAltText")]
		public string ThumbnailImageAltText
		{
			get { return this.GetPropertyValue<string>("thumbnailImageAltText"); }
		}
	}

	/// <summary>Repository Item Master</summary>
	[PublishedContentModel("multiPurposeRepItem")]
	public partial class MultiPurposeRepItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "multiPurposeRepItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MultiPurposeRepItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MultiPurposeRepItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Full Content: NOT used in profiles
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Meta description: Use this field to enter a description for your webpage. This is the information that is displayed by search engines when your website appears in a search listing. Try and keep this below 155 characters.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return this.GetPropertyValue<string>("metaDescription"); }
		}

		///<summary>
		/// Page title: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("onPageTitle")]
		public string OnPageTitle
		{
			get { return this.GetPropertyValue<string>("onPageTitle"); }
		}

		///<summary>
		/// Self Referral
		///</summary>
		[ImplementPropertyType("selfReferral")]
		public string SelfReferral
		{
			get { return this.GetPropertyValue<string>("selfReferral"); }
		}

		///<summary>
		/// Service Age Group
		///</summary>
		[ImplementPropertyType("serviceAgeGroup")]
		public object ServiceAgeGroup
		{
			get { return this.GetPropertyValue("serviceAgeGroup"); }
		}

		///<summary>
		/// Service Category
		///</summary>
		[ImplementPropertyType("serviceCategory")]
		public object ServiceCategory
		{
			get { return this.GetPropertyValue("serviceCategory"); }
		}

		///<summary>
		/// Service Location
		///</summary>
		[ImplementPropertyType("serviceLocation")]
		public object ServiceLocation
		{
			get { return this.GetPropertyValue("serviceLocation"); }
		}

		///<summary>
		/// Additional Tags
		///</summary>
		[ImplementPropertyType("tags")]
		public string Tags
		{
			get { return this.GetPropertyValue<string>("tags"); }
		}
	}

	/// <summary>Procedures_</summary>
	[PublishedContentModel("procedures_CoreProcedures")]
	public partial class Procedures_CoreProcedures : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "procedures_CoreProcedures";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Procedures_CoreProcedures(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Procedures_CoreProcedures, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Intro Text
		///</summary>
		[ImplementPropertyType("introText")]
		public IHtmlString IntroText
		{
			get { return this.GetPropertyValue<IHtmlString>("introText"); }
		}

		///<summary>
		/// Meta Description
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return this.GetPropertyValue<string>("metaDescription"); }
		}
	}

	/// <summary>Procedures_AllItem</summary>
	[PublishedContentModel("procedures_CoreProceduresItem")]
	public partial class Procedures_CoreProceduresItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "procedures_CoreProceduresItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Procedures_CoreProceduresItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Procedures_CoreProceduresItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Item Content
		///</summary>
		[ImplementPropertyType("itemContent")]
		public IHtmlString ItemContent
		{
			get { return this.GetPropertyValue<IHtmlString>("itemContent"); }
		}

		///<summary>
		/// PDF link
		///</summary>
		[ImplementPropertyType("pDFLink")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker PDflink
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("pDFLink"); }
		}
	}

	/// <summary>Procedures_PDF</summary>
	[PublishedContentModel("procedures_PDF")]
	public partial class Procedures_Pdf : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "procedures_PDF";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Procedures_Pdf(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Procedures_Pdf, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// pdf Url
		///</summary>
		[ImplementPropertyType("pdfUrl")]
		public USNStarterKit.USNUrlPicker.Models.UrlPicker PdfUrl
		{
			get { return this.GetPropertyValue<USNStarterKit.USNUrlPicker.Models.UrlPicker>("pdfUrl"); }
		}
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public object UmbracoFile
		{
			get { return this.GetPropertyValue("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}



// EOF
